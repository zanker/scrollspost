- unless @account.public?
  .alert.alert-error
    .close x
    %strong= linkify_text(t(".not_public"), edit_usercp_settings_path)

.row
  .span12
    %h3.header= t(".store", :name => @account.name)

.row#search
  .span4#info
    .well.well-small.well-trimmed
      %dl.dl-horizontal
        %dt= t(".in_game_name")
        %dd= @account.name

        - if @account.steam_name?
          %dt= t(".steam_name")
          %dd= @account.steam_name

        - if @account.channel?
          %dt= t(".in_game_channel")
          %dd= @account.channel

        %dt= t(".haggle")
        %dd= @account.haggle? ? t("yes") : t("no")

      - if @account.note?
        %p.note
          = CGI::escapeHTML(@account.note)

  .span8
    .well.well-small.well-trimmed
      .span12
        %form{:action => store_path(@account._id.base36_encode, @account.name.parameterize)}
          #resources.btn-group
            - Card::RESOURCE_MAP.each_key do |resource|
              %button.btn.btn-inverse{:class => @filters[:resources][resource] ? :active : nil, "data-key" => resource}
                .resources.size-28{:class => "resource-#{resource}"}

          #rarities.btn-group
            - Card::RARITY_MAP.each do |id, rarity|
              %button.btn.btn-inverse{:class => @filters[:rarities][id] ? :active : nil, "data-key" => rarity}
                %span{:class => "rarity-#{id}"}
                  = t("short_rarities.#{rarity}")

          #categories.dropdown
            %a.dropdown-toggle{"data-toggle" => :dropdown, :href => "#"}
              %span
                #{t(".categories_prefix")}
                %span #{t("all")}
              %strong.caret
            %ul.dropdown-menu
              %li{:class => !@filters[:category_id] ? :active : nil}
                %a{:href => "#", "data-key" => "all", "data-prefix" => t(".categories_prefix")}= t("all")

              - @categories.each do |category_id, category|
                %li{:class => @filters[:category_id] == category_id ? :active : nil}
                  %a{:href => "#", "data-key" => category[:slug], "data-prefix" => t(".category_prefix")}= category[:name].titleize

          %input.btn.btn-success{:type => :submit, :value => t(".search"), "data-loading-text" => t(".searching")}

      .clearfix
  :javascript
    $("#store_show").find(".dropdown").each(function(){ var active = $(this).find("ul.dropdown-menu li.active a"); $(this).find("a.dropdown-toggle span").html(active.data("prefix") + " <span>" + active.text() + "</span>"); });

.row
  - [[:sell, @sell_cards], [:buy, @buy_cards]].each do |key, list|
    .span6
      %h4.gold= t(".want_to_#{key}")

      %table.table.table-bordered.table-hover.table-striped
        %thead
          %tr
            %th.icon
              &nbsp;
            %th.name!= sort_header(t(".name"), "name")
            %th.resource!= sort_header(t(".cost"), "resource")
            %th.quantity= t(".quantity")
            %th.price= t(".price")

        %tbody
          - @sorted_cards.each do |card|
            - inventory = list[card._id]
            - next unless inventory

            %tr
              %td.icon
                = image_tag("cards/tiny-#{card.image_id}.png", :class => "cards size-tiny")
              %td.name.card-tt{"data-name" => card.name, "data-card-id" => card.card_id}
                %span{:class => "rarity-#{card.rarity}"}
                  = link_to(card.name, cards_path(card.card_id, card.name.parameterize))
              %td.resource
                != card.costs.map {|type| "#{content_tag(:div, "", :class => "resources resource-#{type} size-16")}#{content_tag(:span, "#{card["cost_#{type}"]}")}"}.join(" / ")

              %td.quantity= number_with_delimiter(inventory["#{key}_quant"])
              %td.price= number_with_delimiter(inventory["#{key}_price"])

          - if list.empty?
            %tr
              %td{:colspan => 5}
                %span.text-error= t(".no_#{key}_found")